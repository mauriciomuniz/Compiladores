01 PalavraReservada program
01 Identifier teste
01 Delimitador ;
03 PalavraReservada var
04 Delimitador {
05 PalavraReservada integer
05 Identifier cont
05 Delimitador ,
05 Identifier cont1
05 Delimitador ,
05 Identifier cont2
05 Delimitador ;
06 PalavraReservada integer
06 Identifier cont3
06 Delimitador ,
06 Delimitador ,
06 Delimitador ;
07 Delimitador }
08 PalavraReservada const
09 Delimitador {
10 PalavraReservada integer
10 Identifier MINIDADE
10 OpRelacional =
10 Decimal 18
10 Delimitador ;
11 PalavraReservada integer
11 Identifier MAXIDADE
11 Decimal 69
11 Delimitador ;
12 PalavraReservada integer
12 OpRelacional =
12 Decimal 69
12 Delimitador ;
13 Identifier MAXIDADE
13 OpRelacional =
13 Decimal 69
13 Delimitador ;
14 PalavraReservada real
14 Identifier MINPESO
14 OpRelacional =
14 RealNumber 50.0
14 Delimitador ;
15 PalavraReservada real
15 Identifier MAXPESO
15 OpRelacional =
15 RealNumber 3000.0
16 Delimitador }
18 PalavraReservada register
18 Identifier Pessoa
19 Delimitador {
20 PalavraReservada integer
20 Identifier idade
20 Delimitador ;
21 PalavraReservada real
21 Identifier peso
21 Delimitador ;
22 PalavraReservada string
22 Identifier nome
22 Delimitador ;
25 PalavraReservada register
25 Identifier Pessoa
26 Delimitador {
27 PalavraReservada integer
27 Identifier idade
27 Delimitador ;
28 PalavraReservada real
28 Identifier peso
28 Delimitador ;
29 PalavraReservada string
29 Identifier nome
30 Delimitador }
32 PalavraReservada procedure
32 Identifier teste1
32 Delimitador (
32 PalavraReservada integer
32 Identifier algo
32 Delimitador ,
32 PalavraReservada boolean
32 Identifier ab
32 Delimitador )
33 Delimitador {
34 PalavraReservada var
35 Delimitador {
36 PalavraReservada integer
36 Identifier cont
36 Delimitador ;
37 Delimitador }
38 PalavraReservada read
38 Delimitador (
38 Identifier abc
38 Delimitador .
38 Identifier ade
38 Delimitador )
38 Delimitador ;
39 Delimitador }
41 PalavraReservada procedure
41 Identifier teste1
41 Delimitador (
41 Delimitador )
41 Delimitador {
42 PalavraReservada var
42 Delimitador {
42 Delimitador }
43 PalavraReservada read
43 Delimitador (
43 Identifier abc
43 Delimitador .
43 Identifier ade
43 Delimitador )
43 Delimitador ;
44 Delimitador }
45 PalavraReservada procedure
45 Identifier teste2
45 Delimitador )
46 PalavraReservada var
46 Delimitador {
46 Delimitador }
47 PalavraReservada read
47 Delimitador (
47 Identifier abc
47 Delimitador .
47 Identifier ade
47 Delimitador )
47 Delimitador ;
48 Delimitador }
49 PalavraReservada function
49 Identifier teste1
49 Delimitador )
49 Delimitador :
49 PalavraReservada integer
49 Delimitador {
50 PalavraReservada var
51 Delimitador {
52 PalavraReservada integer
52 Identifier cont
52 Delimitador ;
53 Delimitador }
55 PalavraReservada read
55 Delimitador (
55 Identifier abc
55 Delimitador .
55 Identifier ade
55 Delimitador )
55 Delimitador ;
56 PalavraReservada return
56 Delimitador ;
57 Delimitador }
58 PalavraReservada function
58 Identifier teste1
58 Delimitador (
58 PalavraReservada integer
58 Identifier idade
58 Delimitador )
58 Delimitador :
58 PalavraReservada boolean
58 Delimitador {
59 PalavraReservada var
59 Delimitador {
59 Delimitador }
61 PalavraReservada if
61 Delimitador (
61 Identifier idade
61 OpLogico &&
61 Identifier MAXIDADE
61 Delimitador )
61 Delimitador {
62 Identifier idade
62 OpAritmetico ++
62 Delimitador ;
63 Delimitador }
64 PalavraReservada return
64 PalavraReservada false
64 Delimitador ;
65 Delimitador }
66 PalavraReservada function
66 Identifier teste1
66 Delimitador (
66 PalavraReservada integer
66 Identifier algo
66 Delimitador ,
66 PalavraReservada boolean
66 Identifier ab
66 Delimitador )
66 Delimitador :
66 PalavraReservada string
66 Delimitador {
67 PalavraReservada var
68 Delimitador {
69 PalavraReservada integer
69 Identifier cont
69 Delimitador ;
70 Delimitador }
71 PalavraReservada read
71 Delimitador (
71 Identifier abc
71 Delimitador .
71 Identifier ade
71 Delimitador )
71 Delimitador ;
72 Identifier j_
72 OpRelacional =
72 Decimal 2
72 Delimitador ;
73 Identifier k_aa
73 OpRelacional =
73 Decimal 1
73 OpAritmetico +
73 Decimal 2
73 Delimitador ;
74 Identifier a
74 OpRelacional =
74 Identifier b
74 OpAritmetico +
74 Decimal 4
74 Delimitador ;
75 Identifier e
75 OpRelacional =
75 Decimal 3
75 OpAritmetico +
75 Identifier c
75 Delimitador ;
76 Identifier e
76 OpRelacional =
76 Identifier c
76 OpAritmetico +
76 Identifier c
76 Delimitador ;
77 Identifier e
77 OpRelacional =
77 Identifier c
77 OpAritmetico ++
77 Delimitador ;
78 Identifier e
78 OpRelacional =
78 Identifier c
78 OpAritmetico --
78 Delimitador ;
79 Identifier e
79 OpRelacional =
79 Decimal 3
79 OpAritmetico -
79 Identifier c
79 Delimitador ;
80 Identifier e
80 OpRelacional =
80 Decimal 3
80 OpAritmetico *
80 Decimal 6
80 Delimitador ;
81 Identifier e
81 OpRelacional =
81 Decimal 3
81 OpAritmetico /
81 Decimal 3
81 Delimitador ;
82 Identifier q
82 OpRelacional =
82 Decimal 2
82 OpRelacional >
82 Decimal 1
82 Delimitador ;
83 Identifier q
83 OpRelacional =
83 Decimal 2
83 OpRelacional >=
83 Decimal 1
83 Delimitador ;
84 Identifier q
84 OpRelacional =
84 Decimal 2
84 OpRelacional <
84 Decimal 1
84 Delimitador ;
85 Identifier q
85 OpRelacional =
85 Decimal 2
85 OpRelacional <=
85 Decimal 1
85 Delimitador ;
86 Identifier q
86 OpRelacional =
86 Decimal 2
86 OpRelacional !=
86 Decimal 1
86 Delimitador ;
87 Identifier q
87 OpRelacional =
87 OpLogico !
87 PalavraReservada true
87 Delimitador ;
88 Identifier q
88 OpRelacional =
88 OpLogico !
88 Identifier a
88 Delimitador ;
89 Identifier q
89 OpRelacional =
89 PalavraReservada true
89 OpLogico &&
89 PalavraReservada false
89 Delimitador ;
90 Identifier q
90 OpRelacional =
90 Identifier a
90 OpLogico &&
90 PalavraReservada true
90 Delimitador ;
91 Identifier q
91 OpRelacional =
91 PalavraReservada true
91 OpLogico ||
91 PalavraReservada false
91 Delimitador ;
92 Identifier a
92 OpRelacional =
92 PalavraReservada false
92 OpLogico ||
92 Identifier bc
92 Delimitador ;
93 Identifier a
93 OpRelacional =
93 StringLiteral "testeee"
93 Delimitador ;
94 Identifier a
94 OpRelacional =
94 Char 'a'
94 Delimitador ;
95 Identifier a
95 Delimitador .
95 Identifier c
95 OpRelacional =
95 Decimal 2
95 Delimitador ;
96 Identifier a
96 OpRelacional =
96 Identifier pessoa
96 Delimitador .
96 Identifier idade
96 Delimitador ;
97 Identifier a
97 OpRelacional =
97 Identifier Soma
97 Delimitador (
97 Identifier c
97 Delimitador )
97 Delimitador ;
98 Identifier a
98 OpRelacional =
98 Identifier Soma
98 Delimitador (
98 Identifier c
98 Delimitador ,
98 Identifier d
98 Delimitador )
98 Delimitador ;
99 Identifier result
99 OpRelacional =
99 Identifier calculate
99 Delimitador (
99 Decimal 3
99 Delimitador ,
99 Decimal 2
99 Delimitador )
99 Delimitador ;
100 Identifier process
100 Delimitador (
100 Decimal 2
100 Delimitador )
100 Delimitador ;
102 PalavraReservada return
102 Identifier ab
102 Delimitador ;
103 Delimitador }
105 PalavraReservada main
106 Delimitador {
108 PalavraReservada var
109 Delimitador {
110 Identifier Pessoa
110 Identifier p
110 Delimitador ;
111 PalavraReservada integer
111 Identifier qtd
111 Delimitador ,
111 Identifier id
111 Delimitador ;
112 PalavraReservada boolean
112 Identifier resposta
112 Delimitador ;
113 Delimitador }
115 Identifier process
115 Delimitador (
115 Delimitador )
115 Delimitador ;
116 Identifier result
116 OpRelacional =
116 Identifier calculate
116 Delimitador (
116 Identifier a
116 Delimitador .
116 Identifier b
116 Delimitador )
116 Delimitador ;
118 PalavraReservada write
118 Delimitador (
118 StringLiteral "Digite a quantidade de pessoas: "
118 Delimitador )
118 Delimitador ;
119 PalavraReservada read
119 Delimitador (
119 Identifier qtd
119 Delimitador )
119 Delimitador ;
120 PalavraReservada if
120 Delimitador (
120 Identifier cont
120 OpLogico &&
120 PalavraReservada true
120 OpLogico ||
120 Identifier a
120 OpRelacional <
120 Identifier b
120 Delimitador )
120 Delimitador {
121 PalavraReservada read
121 Delimitador (
121 Identifier p
121 Delimitador .
121 Identifier nome
121 Delimitador )
121 Delimitador ;
122 Delimitador }
123 PalavraReservada if
123 Delimitador (
123 Identifier a
123 OpRelacional >
123 Identifier b
123 OpLogico ||
123 Identifier a
123 OpRelacional <
123 Identifier b
123 Delimitador )
123 Delimitador {
124 PalavraReservada read
124 Delimitador (
124 Identifier p
124 Delimitador .
124 Identifier nome
124 Delimitador )
124 Delimitador ;
125 Delimitador }
127 PalavraReservada while
127 Delimitador (
127 Identifier cont
127 OpRelacional <
127 Identifier qtd
127 Delimitador )
128 Delimitador {
129 PalavraReservada write
129 Delimitador (
129 StringLiteral "Digite o nome da pessoa:"
129 Delimitador )
129 Delimitador ;
130 PalavraReservada read
130 Delimitador (
130 Identifier p
130 Delimitador .
130 Identifier nome
130 Delimitador )
130 Delimitador ;
131 PalavraReservada write
131 Delimitador (
131 StringLiteral "Digite a idade da pessoa:"
131 Delimitador )
131 Delimitador ;
132 PalavraReservada read
132 Delimitador (
132 Identifier p
132 Delimitador .
132 Identifier idade
132 Delimitador )
132 Delimitador ;
133 PalavraReservada write
133 Delimitador (
133 StringLiteral "Digite o peso da pessoa:"
133 Delimitador )
133 Delimitador ;
134 PalavraReservada read
134 Delimitador (
134 Identifier p
134 Delimitador .
134 Identifier peso
134 Delimitador )
134 Delimitador ;
135 Identifier id
135 OpRelacional =
135 Decimal 20
135 Delimitador ;
136 Identifier resposta
136 OpRelacional =
136 Identifier PodeDoar
136 Delimitador (
136 Identifier id
136 Delimitador ,
136 Decimal 20
136 Delimitador )
136 Delimitador ;
138 PalavraReservada if
138 Delimitador (
138 Identifier resposta
138 OpRelacional ==
138 PalavraReservada true
138 Delimitador )
139 Delimitador {
140 PalavraReservada write
140 Delimitador (
140 StringLiteral "Pode doar sangue!"
140 Delimitador )
140 Delimitador ;
141 Identifier qtd
141 OpRelacional =
141 Identifier qtd
141 OpAritmetico +
141 Decimal 1
141 Delimitador ;
142 PalavraReservada if
142 Delimitador (
142 Identifier a
142 OpLogico &&
142 PalavraReservada false
142 Delimitador )
142 Delimitador {
143 Identifier c
143 OpRelacional =
143 Decimal 3
143 OpAritmetico +
143 Decimal 4
143 Delimitador ;
144 Delimitador }
145 Delimitador }
147 PalavraReservada else
148 Delimitador {
149 PalavraReservada write
149 Delimitador (
149 StringLiteral "Nao Pode doar sangue!"
149 Delimitador )
149 Delimitador ;
150 Delimitador }
152 Identifier cont
152 OpRelacional =
152 Identifier cont
152 OpAritmetico +
152 Decimal 1
152 Delimitador ;
153 Delimitador }
154 PalavraReservada while
154 Delimitador (
154 Identifier a
154 OpLogico &&
154 PalavraReservada true
154 Delimitador )
154 Delimitador {
155 Identifier qtd
155 OpRelacional =
155 Identifier qtd
155 OpAritmetico +
155 Decimal 1
155 Delimitador ;
156 Delimitador }
157 PalavraReservada while
157 Delimitador (
157 Decimal 3
157 OpLogico &&
157 Decimal 6
157 Delimitador )
157 Delimitador {
158 Identifier qtd
158 OpRelacional =
158 Identifier qtd
158 OpAritmetico +
158 Decimal 1
158 Delimitador ;
159 Delimitador }
161 PalavraReservada write
161 Delimitador (
161 StringLiteral "A quantidade de pessoas que puderam doar sangue foi de "
161 Delimitador ,
161 Identifier qtd
161 Delimitador ,
161 StringLiteral " de um total de "
161 Delimitador ,
161 Identifier cont
161 Delimitador ,
161 StringLiteral " pessoas."
161 Delimitador )
161 Delimitador ;
162 Delimitador }

 Nao apresentou erros lexicos neste arquivo

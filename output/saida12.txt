01 PalavraReservada program
01 Identifier teste
01 Delimitador ;
03 PalavraReservada var
04 Delimitador {
05 PalavraReservada integer
05 Identifier cont
05 Delimitador ,
05 Identifier cont1
05 Delimitador ,
05 Identifier cont2
05 Delimitador ;
06 PalavraReservada integer
06 Identifier cont3
06 Delimitador ,
06 Delimitador ,
06 Delimitador ;
07 Delimitador }
08 PalavraReservada const
09 Delimitador {
10 PalavraReservada integer
10 Identifier MINIDADE
10 OpRelacional =
10 Decimal 18
10 Delimitador ;
11 PalavraReservada integer
11 Identifier MAXIDADE
11 Decimal 69
11 Delimitador ;
12 PalavraReservada integer
12 OpRelacional =
12 Decimal 69
12 Delimitador ;
13 Identifier MAXIDADE
13 OpRelacional =
13 Decimal 69
13 Delimitador ;
14 PalavraReservada real
14 Identifier MINPESO
14 OpRelacional =
14 RealNumber 50.0
14 Delimitador ;
15 PalavraReservada real
15 Identifier MAXPESO
15 OpRelacional =
15 RealNumber 3000.0
16 Delimitador }
18 PalavraReservada register
18 Identifier Pessoa
19 Delimitador {
20 PalavraReservada integer
20 Identifier idade
20 Delimitador ;
21 PalavraReservada real
21 Identifier peso
21 Delimitador ;
22 PalavraReservada string
22 Identifier nome
22 Delimitador ;
25 PalavraReservada register
25 Identifier Pessoa
26 Delimitador {
27 PalavraReservada integer
27 Identifier idade
27 Delimitador ;
28 PalavraReservada real
28 Identifier peso
28 Delimitador ;
29 PalavraReservada string
29 Identifier nome
30 Delimitador }
32 PalavraReservada procedure
32 Identifier teste1
32 Delimitador (
32 PalavraReservada integer
32 Identifier algo
32 Delimitador ,
32 PalavraReservada boolean
32 Identifier ab
32 Delimitador )
33 Delimitador {
34 PalavraReservada var
35 Delimitador {
36 PalavraReservada integer
36 Identifier cont
36 Delimitador ;
37 Delimitador }
38 PalavraReservada read
38 Delimitador (
38 Identifier abc
38 Delimitador .
38 Identifier ade
38 Delimitador )
38 Delimitador ;
39 Delimitador }
41 PalavraReservada procedure
41 Identifier teste1
41 Delimitador (
41 Delimitador )
41 Delimitador {
42 PalavraReservada var
42 Delimitador {
42 Delimitador }
43 PalavraReservada read
43 Delimitador (
43 Identifier abc
43 Delimitador .
43 Identifier ade
43 Delimitador )
43 Delimitador ;
44 Delimitador }
45 PalavraReservada procedure
45 Identifier teste2
45 Delimitador )
46 PalavraReservada var
46 Delimitador {
46 Delimitador }
47 PalavraReservada read
47 Delimitador (
47 Identifier abc
47 Delimitador .
47 Identifier ade
47 Delimitador )
47 Delimitador ;
48 Delimitador }
49 PalavraReservada function
49 Identifier teste1
49 Delimitador )
49 Delimitador :
49 PalavraReservada integer
49 Delimitador {
50 PalavraReservada var
51 Delimitador {
52 PalavraReservada integer
52 Identifier cont
52 Delimitador ;
53 Delimitador }
55 PalavraReservada read
55 Delimitador (
55 Identifier abc
55 Delimitador .
55 Identifier ade
55 Delimitador )
55 Delimitador ;
56 PalavraReservada return
56 Delimitador ;
57 Delimitador }
58 PalavraReservada function
58 Identifier teste1
58 Delimitador (
58 PalavraReservada integer
58 Identifier idade
58 Delimitador )
58 Delimitador :
58 PalavraReservada boolean
58 Delimitador {
59 PalavraReservada var
59 Delimitador {
59 Delimitador }
61 PalavraReservada if
61 Delimitador (
61 Identifier idade
61 OpLogico &&
61 Identifier MAXIDADE
61 Delimitador )
61 Delimitador {
62 Identifier idade
62 OpAritmetico ++
62 Delimitador ;
63 Delimitador }
64 PalavraReservada return
64 PalavraReservada false
64 Delimitador ;
65 Delimitador }
66 PalavraReservada function
66 Identifier teste1
66 Delimitador (
66 PalavraReservada integer
66 Identifier algo
66 Delimitador ,
66 PalavraReservada boolean
66 Identifier ab
66 Delimitador )
66 Delimitador :
66 PalavraReservada string
66 Delimitador {
67 PalavraReservada var
68 Delimitador {
69 PalavraReservada integer
69 Identifier cont
69 Delimitador ;
70 Delimitador }
71 PalavraReservada read
71 Delimitador (
71 Identifier abc
71 Delimitador .
71 Identifier ade
71 Delimitador )
71 Delimitador ;
72 Identifier j_
72 OpRelacional =
72 Decimal 2
72 Delimitador ;
73 Identifier k_aa
73 OpRelacional =
73 Decimal 1
73 OpAritmetico +
73 Decimal 2
73 Delimitador ;
74 Identifier a
74 OpRelacional =
74 Identifier b
74 OpAritmetico +
74 Decimal 4
74 Delimitador ;
75 Identifier e
75 OpRelacional =
75 Decimal 3
75 OpAritmetico +
75 Identifier c
75 Delimitador ;
76 Identifier e
76 OpRelacional =
76 Identifier c
76 OpAritmetico +
76 Identifier c
76 Delimitador ;
77 Identifier e
77 OpRelacional =
77 Identifier c
77 OpAritmetico ++
77 Delimitador ;
78 Identifier e
78 OpRelacional =
78 Decimal 3
78 OpAritmetico -
78 Identifier c
78 Delimitador ;
79 Identifier e
79 OpRelacional =
79 Decimal 3
79 OpAritmetico *
79 Decimal 6
79 Delimitador ;
80 Identifier e
80 OpRelacional =
80 Decimal 3
80 OpAritmetico /
80 Decimal 3
80 Delimitador ;
81 Identifier q
81 OpRelacional =
81 Decimal 2
81 OpRelacional >
81 Decimal 1
81 Delimitador ;
82 Identifier q
82 OpRelacional =
82 Decimal 2
82 OpRelacional >=
82 Decimal 1
82 Delimitador ;
83 Identifier q
83 OpRelacional =
83 Decimal 2
83 OpRelacional <
83 Decimal 1
83 Delimitador ;
84 Identifier q
84 OpRelacional =
84 Decimal 2
84 OpRelacional <=
84 Decimal 1
84 Delimitador ;
85 Identifier q
85 OpRelacional =
85 Decimal 2
85 OpRelacional !=
85 Decimal 1
85 Delimitador ;
86 Identifier q
86 OpRelacional =
86 OpLogico !
86 PalavraReservada true
86 Delimitador ;
87 Identifier q
87 OpRelacional =
87 OpLogico !
87 Identifier a
87 Delimitador ;
88 Identifier q
88 OpRelacional =
88 PalavraReservada true
88 OpLogico &&
88 PalavraReservada false
88 Delimitador ;
89 Identifier q
89 OpRelacional =
89 Identifier a
89 OpLogico &&
89 PalavraReservada true
89 Delimitador ;
90 Identifier q
90 OpRelacional =
90 PalavraReservada true
90 OpLogico ||
90 PalavraReservada false
90 Delimitador ;
91 Identifier a
91 OpRelacional =
91 PalavraReservada false
91 OpLogico ||
91 Identifier bc
91 Delimitador ;
92 Identifier a
92 OpRelacional =
92 StringLiteral "testeee"
92 Delimitador ;
93 Identifier a
93 OpRelacional =
93 Char 'a'
93 Delimitador ;
94 Identifier a
94 Delimitador .
94 Identifier c
94 OpRelacional =
94 Decimal 2
94 Delimitador ;
95 Identifier a
95 OpRelacional =
95 Identifier pessoa
95 Delimitador .
95 Identifier idade
95 Delimitador ;
96 Identifier a
96 OpRelacional =
96 Identifier Soma
96 Delimitador (
96 Identifier c
96 Delimitador )
96 Delimitador ;
97 Identifier a
97 OpRelacional =
97 Identifier Soma
97 Delimitador (
97 Identifier c
97 Delimitador ,
97 Identifier d
97 Delimitador )
97 Delimitador ;
98 Identifier result
98 OpRelacional =
98 Identifier calculate
98 Delimitador (
98 Decimal 3
98 Delimitador ,
98 Decimal 2
98 Delimitador )
98 Delimitador ;
99 Identifier process
99 Delimitador (
99 Decimal 2
99 Delimitador )
99 Delimitador ;
101 PalavraReservada return
101 Identifier ab
101 Delimitador ;
102 Delimitador }
104 PalavraReservada main
105 Delimitador {
107 PalavraReservada var
108 Delimitador {
109 Identifier Pessoa
109 Identifier p
109 Delimitador ;
110 PalavraReservada integer
110 Identifier qtd
110 Delimitador ,
110 Identifier id
110 Delimitador ;
111 PalavraReservada boolean
111 Identifier resposta
111 Delimitador ;
112 Delimitador }
114 Identifier process
114 Delimitador (
114 Delimitador )
114 Delimitador ;
115 Identifier result
115 OpRelacional =
115 Identifier calculate
115 Delimitador (
115 Identifier a
115 Delimitador .
115 Identifier b
115 Delimitador )
115 Delimitador ;
117 PalavraReservada write
117 Delimitador (
117 StringLiteral "Digite a quantidade de pessoas: "
117 Delimitador )
117 Delimitador ;
118 PalavraReservada read
118 Delimitador (
118 Identifier qtd
118 Delimitador )
118 Delimitador ;
119 PalavraReservada if
119 Delimitador (
119 Identifier cont
119 OpLogico &&
119 PalavraReservada true
119 OpLogico ||
119 Identifier a
119 OpRelacional <
119 Identifier b
119 Delimitador )
119 Delimitador {
120 PalavraReservada read
120 Delimitador (
120 Identifier p
120 Delimitador .
120 Identifier nome
120 Delimitador )
120 Delimitador ;
121 Delimitador }
122 PalavraReservada if
122 Delimitador (
122 Identifier a
122 OpRelacional >
122 Identifier b
122 OpLogico ||
122 Identifier a
122 OpRelacional <
122 Identifier b
122 Delimitador )
122 Delimitador {
123 PalavraReservada read
123 Delimitador (
123 Identifier p
123 Delimitador .
123 Identifier nome
123 Delimitador )
123 Delimitador ;
124 Delimitador }
126 PalavraReservada while
126 Delimitador (
126 Identifier cont
126 OpRelacional <
126 Identifier qtd
126 Delimitador )
127 Delimitador {
128 PalavraReservada write
128 Delimitador (
128 StringLiteral "Digite o nome da pessoa:"
128 Delimitador )
128 Delimitador ;
129 PalavraReservada read
129 Delimitador (
129 Identifier p
129 Delimitador .
129 Identifier nome
129 Delimitador )
129 Delimitador ;
130 PalavraReservada write
130 Delimitador (
130 StringLiteral "Digite a idade da pessoa:"
130 Delimitador )
130 Delimitador ;
131 PalavraReservada read
131 Delimitador (
131 Identifier p
131 Delimitador .
131 Identifier idade
131 Delimitador )
131 Delimitador ;
132 PalavraReservada write
132 Delimitador (
132 StringLiteral "Digite o peso da pessoa:"
132 Delimitador )
132 Delimitador ;
133 PalavraReservada read
133 Delimitador (
133 Identifier p
133 Delimitador .
133 Identifier peso
133 Delimitador )
133 Delimitador ;
134 Identifier id
134 OpRelacional =
134 Decimal 20
134 Delimitador ;
135 Identifier resposta
135 OpRelacional =
135 Identifier PodeDoar
135 Delimitador (
135 Identifier id
135 Delimitador ,
135 Decimal 20
135 Delimitador )
135 Delimitador ;
137 PalavraReservada if
137 Delimitador (
137 Identifier resposta
137 OpRelacional ==
137 PalavraReservada true
137 Delimitador )
138 Delimitador {
139 PalavraReservada write
139 Delimitador (
139 StringLiteral "Pode doar sangue!"
139 Delimitador )
139 Delimitador ;
140 Identifier qtd
140 OpRelacional =
140 Identifier qtd
140 OpAritmetico +
140 Decimal 1
140 Delimitador ;
141 PalavraReservada if
141 Delimitador (
141 Identifier a
141 OpLogico &&
141 PalavraReservada false
141 Delimitador )
141 Delimitador {
142 Identifier c
142 OpRelacional =
142 Decimal 3
142 OpAritmetico +
142 Decimal 4
142 Delimitador ;
143 Delimitador }
144 Delimitador }
146 PalavraReservada else
147 Delimitador {
148 PalavraReservada write
148 Delimitador (
148 StringLiteral "Nao Pode doar sangue!"
148 Delimitador )
148 Delimitador ;
149 Delimitador }
151 Identifier cont
151 OpRelacional =
151 Identifier cont
151 OpAritmetico +
151 Decimal 1
151 Delimitador ;
152 Delimitador }
153 PalavraReservada while
153 Delimitador (
153 Identifier a
153 OpLogico &&
153 PalavraReservada true
153 Delimitador )
153 Delimitador {
154 Identifier qtd
154 OpRelacional =
154 Identifier qtd
154 OpAritmetico +
154 Decimal 1
154 Delimitador ;
155 Delimitador }
156 PalavraReservada while
156 Delimitador (
156 Decimal 3
156 OpLogico &&
156 Decimal 6
156 Delimitador )
156 Delimitador {
157 Identifier qtd
157 OpRelacional =
157 Identifier qtd
157 OpAritmetico +
157 Decimal 1
157 Delimitador ;
158 Delimitador }
160 PalavraReservada write
160 Delimitador (
160 StringLiteral "A quantidade de pessoas que puderam doar sangue foi de "
160 Delimitador ,
160 Identifier qtd
160 Delimitador ,
160 StringLiteral " de um total de "
160 Delimitador ,
160 Identifier cont
160 Delimitador ,
160 StringLiteral " pessoas."
160 Delimitador )
160 Delimitador ;
161 Delimitador }

 Nao apresentou erros lexicos neste arquivo

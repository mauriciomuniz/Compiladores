02 PalavraReservada program
02 Identifier Programa1
02 Delimitador ;
03 PalavraReservada var
04 Delimitador {
06 PalavraReservada integer
06 Identifier cont
06 Delimitador ;
07 Delimitador }
08 PalavraReservada const
09 Delimitador {
10 PalavraReservada integer
10 Identifier MINIDADE
10 OpRelacional =
10 Decimal 18
10 Delimitador ;
11 PalavraReservada integer
11 Identifier MAXIDADE
11 OpRelacional =
11 Decimal 69
11 Delimitador ;
12 PalavraReservada real
12 Identifier MINPESO
12 OpRelacional =
12 RealNumber 50.0
12 Delimitador ;
13 Delimitador }
14 PalavraReservada register
14 Identifier Pessoa
15 Delimitador {
16 PalavraReservada integer
16 Identifier idade
16 Delimitador ;
17 PalavraReservada real
17 Identifier peso
17 Delimitador ;
18 PalavraReservada string
18 Identifier nome
18 Delimitador ;
19 Delimitador }
20 PalavraReservada procedure
20 Identifier Finalizar
20 Delimitador (
20 Delimitador )
21 Delimitador {
22 PalavraReservada var
23 Delimitador {
24 PalavraReservada integer
24 Identifier cont
24 Delimitador ;
25 Delimitador }
26 PalavraReservada write
26 Delimitador (
26 StringLiteral "Muito obrigada por usar nosso programa! Tchau!"
26 Delimitador )
26 Delimitador ;
27 Delimitador }
28 PalavraReservada function
28 Identifier PodeDoar
28 Delimitador (
28 PalavraReservada integer
28 Identifier idade
28 Delimitador ,
28 PalavraReservada real
28 Identifier peso
28 Delimitador )
28 Delimitador :
28 PalavraReservada boolean
29 Delimitador {
29 PalavraReservada var
30 Delimitador {
31 PalavraReservada integer
31 Identifier cont
31 Delimitador ;
32 Delimitador }
33 PalavraReservada if
33 Delimitador (
33 Identifier idade
33 OpRelacional >=
33 Identifier MINIDADE
33 OpLogico &&
33 Identifier idade
33 OpRelacional <=
33 Identifier MAXIDADE
33 Delimitador )
34 Delimitador {
35 PalavraReservada if
35 Delimitador (
35 Identifier peso
35 OpRelacional >=
35 Identifier MINPESO
35 Delimitador )
36 Delimitador {
38 Delimitador }
39 Delimitador }
40 PalavraReservada else
41 Delimitador {
43 Delimitador }
44 PalavraReservada return
44 PalavraReservada false
44 Delimitador ;
45 Delimitador }
47 PalavraReservada main
48 Delimitador {
49 PalavraReservada var
50 Delimitador {
51 Identifier Pessoa
51 Identifier p
51 Delimitador ;
52 PalavraReservada integer
52 Identifier qtd
52 Delimitador ,
52 Identifier id
52 Delimitador ;
53 PalavraReservada boolean
53 Identifier resposta
53 Delimitador ;
54 Delimitador }
56 PalavraReservada write
56 Delimitador (
56 StringLiteral "Digite a quantidade de pessoas: "
56 Delimitador )
56 Delimitador ;
57 PalavraReservada read
57 Delimitador (
57 Identifier qtd
57 Delimitador )
57 Delimitador ;
59 PalavraReservada while
59 Delimitador (
59 Identifier cont
59 OpRelacional <
59 Identifier qtd
59 Delimitador )
60 Delimitador {
61 PalavraReservada write
61 Delimitador (
61 StringLiteral "Digite o nome da pessoa:"
61 Delimitador )
61 Delimitador ;
62 PalavraReservada read
62 Delimitador (
62 Identifier p
62 Delimitador .
62 Identifier nome
62 Delimitador )
62 Delimitador ;
63 PalavraReservada write
63 Delimitador (
63 StringLiteral "Digite a idade da pessoa:"
63 Delimitador )
63 Delimitador ;
64 PalavraReservada read
64 Delimitador (
64 Identifier p
64 Delimitador .
64 Identifier idade
64 Delimitador )
64 Delimitador ;
65 PalavraReservada write
65 Delimitador (
65 StringLiteral "Digite o peso da pessoa:"
65 Delimitador )
65 Delimitador ;
66 PalavraReservada read
66 Delimitador (
66 Identifier p
66 Delimitador .
66 Identifier peso
66 Delimitador )
66 Delimitador ;
67 Identifier id
67 OpRelacional =
67 Identifier p
67 Delimitador .
67 Identifier idade
67 Delimitador ;
68 Identifier resposta
68 OpRelacional =
68 Identifier PodeDoar
68 Delimitador (
68 Identifier id
68 Delimitador ,
68 Identifier p
68 Delimitador .
68 Identifier peso
68 Delimitador )
68 Delimitador ;
69 PalavraReservada if
69 Delimitador (
69 Identifier resposta
69 OpRelacional ==
69 PalavraReservada true
69 Delimitador )
70 Delimitador {
71 PalavraReservada write
71 Delimitador (
71 StringLiteral "Pode doar sangue!"
71 Delimitador )
71 Delimitador ;
72 Identifier qtd
72 OpRelacional =
72 Identifier qtd
72 OpAritmetico +
72 Decimal 1
72 Delimitador ;
73 Delimitador }
74 PalavraReservada else
75 Delimitador {
76 PalavraReservada write
76 Delimitador (
76 StringLiteral "Nao pode doar sangue!"
76 Delimitador )
76 Delimitador ;
77 Delimitador }
78 Identifier cont
78 OpAritmetico ++
78 Delimitador ;
79 Delimitador }
81 PalavraReservada write
81 Delimitador (
81 StringLiteral "A quantidade de pessoas que puderam doar sangue foi de "
81 Delimitador ,
81 Identifier qtd
81 Delimitador ,
81 StringLiteral " de um total de "
81 Delimitador ,
81 Identifier cont
81 Delimitador ,
81 StringLiteral " pessoas."
81 Delimitador )
81 Delimitador ;
82 Identifier Finalizar
82 Delimitador (
82 Delimitador )
82 Delimitador ;
83 Delimitador }

 Nao apresentou erros lexicos neste arquivo

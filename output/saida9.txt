02 PalavraReservada program
02 Identifier Programa1
02 Delimitador ;
03 PalavraReservada var
04 Delimitador {
06 PalavraReservada integer
06 Identifier cont
06 Delimitador ;
07 Delimitador }
08 PalavraReservada const
09 Delimitador {
10 PalavraReservada integer
10 Identifier MINIDADE
10 OpRelacional =
10 Decimal 18
10 Delimitador ;
11 PalavraReservada integer
11 Identifier MAXIDADE
11 OpRelacional =
11 Decimal 69
11 Delimitador ;
12 PalavraReservada real
12 Identifier MINPESO
12 OpRelacional =
12 RealNumber 50.0
12 Delimitador ;
13 Delimitador }
14 PalavraReservada register
14 Identifier Pessoa
15 Delimitador {
16 PalavraReservada integer
16 Identifier idade
16 Delimitador ;
17 PalavraReservada real
17 Identifier peso
17 Delimitador ;
18 PalavraReservada string
18 Identifier nome
18 Delimitador ;
19 Delimitador }
20 PalavraReservada procedure
20 Identifier Finalizar
20 Delimitador (
20 Delimitador )
21 Delimitador {
22 PalavraReservada var
23 Delimitador {
24 PalavraReservada integer
24 Identifier cont
24 Delimitador ;
25 Delimitador }
26 PalavraReservada write
26 Delimitador (
26 StringLiteral "Muito obrigada por usar nosso programa! Tchau!"
26 Delimitador )
26 Delimitador ;
27 Delimitador }
28 PalavraReservada function
28 Identifier PodeDoar
28 Delimitador (
28 PalavraReservada integer
28 Identifier idade
28 Delimitador ,
28 PalavraReservada real
28 Identifier peso
28 Delimitador )
28 Delimitador :
28 PalavraReservada boolean
29 Delimitador {
29 PalavraReservada var
30 Delimitador {
31 PalavraReservada integer
31 Identifier cont
31 Delimitador ;
32 Delimitador }
33 PalavraReservada if
33 Delimitador (
33 Identifier idade
33 OpRelacional >=
33 Identifier MINIDADE
33 OpLogico &&
33 Identifier idade
33 OpRelacional <=
33 Identifier MAXIDADE
33 Delimitador )
34 Delimitador {
35 PalavraReservada if
35 Delimitador (
35 Identifier peso
35 OpRelacional >=
35 Identifier MINPESO
35 Delimitador )
36 Delimitador {
38 Delimitador }
39 Delimitador }
40 PalavraReservada else
41 Delimitador {
43 Delimitador }
44 PalavraReservada return
44 PalavraReservada false
44 Delimitador ;
45 Delimitador }
47 PalavraReservada main
48 Delimitador {
49 PalavraReservada var
50 Delimitador {
51 Identifier Pessoa
51 Identifier p
51 Delimitador ;
52 PalavraReservada integer
52 Identifier qtd
52 Delimitador ,
52 Identifier id
52 Delimitador ;
53 PalavraReservada boolean
53 Identifier resposta
53 Delimitador ;
54 Delimitador }
56 Identifier resposta
56 OpRelacional =
56 Identifier qtd
56 OpRelacional <
56 Decimal 4
56 Delimitador ;
57 PalavraReservada write
57 Delimitador (
57 StringLiteral "Digite a quantidade de pessoas: "
57 Delimitador )
57 Delimitador ;
58 PalavraReservada read
58 Delimitador (
58 Identifier qtd
58 Delimitador )
58 Delimitador ;
60 PalavraReservada while
60 Delimitador (
60 Identifier cont
60 OpRelacional <
60 Identifier qtd
60 Delimitador )
61 Delimitador {
62 PalavraReservada write
62 Delimitador (
62 StringLiteral "Digite o nome da pessoa:"
62 Delimitador )
62 Delimitador ;
63 PalavraReservada read
63 Delimitador (
63 Identifier p
63 Delimitador .
63 Identifier nome
63 Delimitador )
63 Delimitador ;
64 PalavraReservada write
64 Delimitador (
64 StringLiteral "Digite a idade da pessoa:"
64 Delimitador )
64 Delimitador ;
65 PalavraReservada read
65 Delimitador (
65 Identifier p
65 Delimitador .
65 Identifier idade
65 Delimitador )
65 Delimitador ;
66 PalavraReservada write
66 Delimitador (
66 StringLiteral "Digite o peso da pessoa:"
66 Delimitador )
66 Delimitador ;
67 PalavraReservada read
67 Delimitador (
67 Identifier p
67 Delimitador .
67 Identifier peso
67 Delimitador )
67 Delimitador ;
68 Identifier id
68 OpRelacional =
68 Identifier p
68 Delimitador .
68 Identifier idade
68 Delimitador ;
69 Identifier resposta
69 OpRelacional =
69 Identifier PodeDoar
69 Delimitador (
69 Identifier id
69 Delimitador ,
69 Identifier p
69 Delimitador .
69 Identifier peso
69 Delimitador )
69 Delimitador ;
70 PalavraReservada if
70 Delimitador (
70 Identifier resposta
70 OpRelacional ==
70 PalavraReservada true
70 Delimitador )
71 Delimitador {
72 PalavraReservada write
72 Delimitador (
72 StringLiteral "Pode doar sangue!"
72 Delimitador )
72 Delimitador ;
73 Identifier qtd
73 OpRelacional =
73 Identifier qtd
73 OpAritmetico +
73 Decimal 1
73 Delimitador ;
74 Delimitador }
75 PalavraReservada else
76 Delimitador {
77 PalavraReservada write
77 Delimitador (
77 StringLiteral "Nao pode doar sangue!"
77 Delimitador )
77 Delimitador ;
78 Delimitador }
79 Identifier cont
79 OpAritmetico ++
79 Delimitador ;
80 Delimitador }
82 PalavraReservada write
82 Delimitador (
82 StringLiteral "A quantidade de pessoas que puderam doar sangue foi de "
82 Delimitador ,
82 Identifier qtd
82 Delimitador ,
82 StringLiteral " de um total de "
82 Delimitador ,
82 Identifier cont
82 Delimitador ,
82 StringLiteral " pessoas."
82 Delimitador )
82 Delimitador ;
83 Identifier Finalizar
83 Delimitador (
83 Delimitador )
83 Delimitador ;
84 Delimitador }

 Nao apresentou erros lexicos neste arquivo
